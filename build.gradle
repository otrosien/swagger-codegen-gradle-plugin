plugins {
    id 'java-gradle-plugin'
    id 'jacoco'
    id 'groovy'
    id 'maven'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'com.gradle.plugin-publish' version '0.9.7'
    id 'pl.allegro.tech.build.axion-release' version '1.3.4'
    id 'com.github.kt3k.coveralls' version '2.8.1'
    id 'com.github.ben-manes.versions' version '0.14.0'
}

repositories {
    mavenCentral()
}

scmVersion {
    tag {
        prefix = 'v'
    }

    hooks {
        pre 'fileUpdate', [file: 'README.md', pattern: {v,p -> /($v)/}, replacement: {v, p -> "$v"}]
        pre 'commit'
    }
}

sourceSets {
    functionalTest {
        groovy {
            srcDir file('src/functionalTest/groovy')
        }
        resources {
            srcDir file('src/functionalTest/resources')
        }
        compileClasspath += sourceSets.main.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }
}

task functionalTest(type: Test) {
    testClassesDir = sourceSets.functionalTest.output.classesDir
    classpath = sourceSets.functionalTest.runtimeClasspath
}

check.dependsOn functionalTest

gradlePlugin {
    testSourceSets sourceSets.functionalTest
}

dependencies {

    '0.4.38'.with { codegenVersion ->
        compile "org.zalando.stups:swagger-codegen-common:${codegenVersion}"
        compile "org.zalando.stups:swagger-codegen-template-jaxrs-interfaces:${codegenVersion}"
        compile "org.zalando.stups:swagger-codegen-template-spring-interfaces:${codegenVersion}"
    }

    testCompile 'org.assertj:assertj-core:3.6.2'
    testCompile 'junit:junit:4.12'

    // needs to be testCompile instead of functionalTestCompile for eclipse
    testCompile gradleTestKit()

    ['testCompile', 'functionalTestCompile'].each { scope ->
        "$scope"('org.spockframework:spock-core:1.0-groovy-2.4') {
            exclude module: 'groovy-all'
        }
    }
}

configurations {
    all*.exclude module: 'maven-plugin-tools-api'
    all*.exclude module: 'maven-bundle-plugin'
}


// coverage
jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

// publishing

sourceCompatibility = 1.7
group = 'org.zalando.gradle.plugins'
project.version = scmVersion.version

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId 'swagger-codegen-gradle-plugin'
            groupId = project.group

            artifact sourceJar {
                classifier 'sources'
            }
        }
    }
}

pluginBundle {
    website = 'https://github.com/otrosien/swagger-codegen-gradle-plugin'
    vcsUrl = 'https://github.com/otrosien/swagger-codegen-gradle-plugin'
    description = 'Swagger Generator Plugin for Gradle'
    tags = ['swagger', 'api', 'generator']

    plugins {
        swaggerPlugin {
            id = project.group
            displayName = 'Swagger Generator Plugin for Gradle'
        }
    }
}

publish.dependsOn publishPlugins
