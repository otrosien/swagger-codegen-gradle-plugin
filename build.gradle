plugins {
    id "java-gradle-plugin"
    id "groovy"
    id 'maven'
    id 'maven-publish'
}

repositories {
    mavenCentral()
}

sourceSets {
    functionalTest {
        groovy {
            srcDir file('src/functionalTest/groovy')
        }
        resources {
            srcDir file('src/functionalTest/resources')
        }
        compileClasspath += sourceSets.main.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }
}

task functionalTest(type: Test) {
    testClassesDir = sourceSets.functionalTest.output.classesDir
    classpath = sourceSets.functionalTest.runtimeClasspath
}

check.dependsOn functionalTest

gradlePlugin {
    testSourceSets sourceSets.functionalTest
}

dependencies {

    '0.4.38'.with { codegenVersion ->
        compile "org.zalando.stups:swagger-codegen-common:${codegenVersion}"
        compile "org.zalando.stups:swagger-codegen-template-jaxrs-interfaces:${codegenVersion}"
        compile "org.zalando.stups:swagger-codegen-template-spring-interfaces:${codegenVersion}"
    }

    testCompile 'org.assertj:assertj-core:3.6.2'
    testCompile 'junit:junit:4.12'

    functionalTestCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
        exclude module: 'groovy-all'
    }
}

// publishing

sourceCompatibility = 1.7
group = 'org.zalando.gradle.plugins'
version = '0.4.38'

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId 'swagger-codegen-gradle-plugin'
            groupId = project.group

            artifact sourceJar {
                classifier 'sources'
            }
        }
    }
}
